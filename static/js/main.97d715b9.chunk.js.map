{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","todosWithUsers","App","useState","setTodos","selectedUserId","setSelectedUserId","newTodoTitle","setNewTodoTitle","isUserSelectError","setIsUserSelectError","isTitleError","setIsTitleError","getNewId","arr","ids","item","max","Math","Number","isFinite","action","method","onSubmit","event","preventDefault","validateNewTitle","trim","prevTodos","newTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97d715b9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={`TodoInfo ${todo.completed\n      ? 'TodoInfo--completed'\n      : ''}`}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <div key={todo.id}>\n        <TodoInfo todo={todo} />\n      </div>\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number | null) {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUsers);\n\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [isUserSelectError, setIsUserSelectError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const clearForm = () => {\n    setSelectedUserId(0);\n    setNewTodoTitle('');\n    setIsTitleError(false);\n    setIsUserSelectError(false);\n  };\n\n  const getNewId = (arr: { id: number }[]): number => {\n    const ids = arr.map((item) => item.id);\n    const max = Math.max(...ids);\n\n    return Number.isFinite(max)\n      ? max + 1\n      : 1;\n  };\n\n  const handleSetTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodoTitle(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setIsUserSelectError(false);\n  };\n\n  const handleSubmit = ((event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const validateNewTitle = newTodoTitle.trim();\n\n    if (!selectedUserId || !validateNewTitle) {\n      setIsTitleError(!validateNewTitle);\n      setIsUserSelectError(!selectedUserId);\n\n      return;\n    }\n\n    setTodos((prevTodos) => {\n      const newTodo: Todo = {\n        id: getNewId(prevTodos),\n        title: validateNewTitle,\n        userId: selectedUserId,\n        completed: false,\n        user: getUser(selectedUserId),\n      };\n\n      return [...prevTodos, newTodo];\n    });\n\n    clearForm();\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"taskTitle\">\n            {'Title: '}\n          </label>\n\n          <input\n            type=\"text\"\n            id=\"taskTitle\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTodoTitle}\n            onChange={handleSetTitle}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">\n            {'User: '}\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={selectedUserId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserSelectError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}